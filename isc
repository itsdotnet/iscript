#!/bin/bash

# Define the script directory
SCRIPT_DIR="$(dirname "$(realpath "$0")")"

# Detect distribution
detect_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo "$ID"
    else
        echo "unknown"
    fi
}

# List of available packages
LIST="dotnet
postgres
"

function list_packages() {
    echo "$LIST"
}

function setup_package() {
    PACKAGE=$1
    DISTRO=$(detect_distro)
    
    case $PACKAGE in
        dotnet)
            "$SCRIPT_DIR/scripts/setup_dotnet.sh"
            ;;
        postgres)
            case $DISTRO in
                arch)
                    "$SCRIPT_DIR/arch/setup_postgres.sh"
                    ;;
                ubuntu|debian)
                    "$SCRIPT_DIR/ubuntu/setup_postgres.sh"
                    ;;
                *)
                    echo "Unsupported distribution: $DISTRO"
                    exit 1
                    ;;
            esac
            ;;
        go)
            # Example for Go, add distribution-specific handling as needed
            ;;
        nginx)
            # Example for Nginx, add distribution-specific handling as needed
            ;;
        *)
            echo "Unknown package: $PACKAGE"
            echo "Usage: isc --setup <package>"
            exit 1
            ;;
    esac
}

function show_help() {
    echo "Usage: isc [option] [package]"
    echo ""
    echo "Options:"
    echo "  --list            List all available packages"
    echo "  --setup <package> Set up the specified package"
    echo "  --help            Display this help message"
    echo "  --update          Update the isc script"
}

case $1 in
    --list)
        list_packages
        ;;
    --setup)
        if [ -z "$2" ]; then
            echo "Usage: isc --setup <package>"
            exit 1
        fi
        setup_package $2
        ;;
    --help)
        show_help
        ;;
    --update)
        if [ -x "$SCRIPT_DIR/update.sh" ]; then
            "$SCRIPT_DIR/update.sh"
        else
            echo "Update script not found or not executable."
            exit 1
        fi
        ;;
    *)
        echo "Invalid option: $1"
        show_help
        exit 1
        ;;
esac
